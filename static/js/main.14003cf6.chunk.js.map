{"version":3,"sources":["components/NavBar.js","components/EmployeeContext.js","components/Button.js","hooks/API.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","EmployeeContext","createContext","Button","children","useGet","url","useContext","employees","setEmployees","visibleEmployees","setVisibleEmployees","useEffect","a","axios","get","response","data","results","console","log","getEmployees","sortFunc","sort","b","name","first","dob","age","EmployeeTable","useState","onChange","e","target","value","filteredList","filter","person","includes","id","onClick","map","employee","last","gender","email","login","uuid","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14003cf6.chunk.js","sourcesContent":["import React from \"react\";\r\n//import Search from './SearchBar'\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-primary\">\r\n      <h2>Employee Directory</h2>\r\n      <div>\r\n        <h3>Search By First Name:</h3>\r\n        {/* Search bar here */}\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import {createContext} from 'react';\r\n\r\nexport const EmployeeContext = createContext(null);","import React from 'react';\r\n\r\nfunction Button({children}) {\r\n    return (\r\n        <button className=\"Button\">\r\n            {children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import {useEffect, useContext} from 'react';\r\nimport {EmployeeContext} from \"../components/EmployeeContext\";\r\nimport axios from 'axios';\r\n\r\n//useGet function\r\nexport function useGet(url) {\r\n    const {employees, setEmployees, visibleEmployees, setVisibleEmployees}  = useContext(EmployeeContext)\r\n\r\n    //useEffect function\r\n    useEffect(() => {\r\n        async function getEmployees() {\r\n            //try catch for getEmployees\r\n            try {\r\n                //create response variable for axios call\r\n                const response = await axios.get(url)\r\n                setEmployees(response.data.results)\r\n                setVisibleEmployees(response.data.results)\r\n\r\n            } catch (error) {\r\n                console.log(\"error with API:\", error)\r\n            }\r\n        }\r\n        //call getEmployees function\r\n        getEmployees()\r\n\r\n    }, [])\r\n    //end useEffect function\r\n\r\n    //begin sortFunc\r\n    function sortFunc(sort) {\r\n        switch(sort) {\r\n            case \"name\": sortByName()\r\n            break\r\n            case \"age\": sortByAge()\r\n            break\r\n            default: console.log(\"Does not match name or age\")\r\n        }\r\n    }\r\n    //end sortFunc\r\n\r\n    //sort by first name\r\n    function sortByName() {\r\n        employees.sort(function(a,b) {\r\n            if(a.name.first < b.name.first) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        })\r\n        //spread operator to create new variable\r\n        setVisibleEmployees([...employees])\r\n\r\n    }\r\n\r\n    //sort by age\r\n    function sortByAge(){\r\n        employees.sort(function(a,b){\r\n            return (a.dob.age - b.dob.age)\r\n        })\r\n        setVisibleEmployees([...employees])\r\n    }\r\n\r\n    return {visibleEmployees, sortFunc}\r\n}\r\n//end useGet function","import React, { useState, useContext } from \"react\";\r\nimport { EmployeeContext } from \"./EmployeeContext\";\r\nimport Button from \"./Button\";\r\nimport { useGet } from \"../hooks/API\";\r\nimport \"./EmployeeTable.css\";\r\n\r\n//begin employee table function\r\nfunction EmployeeTable() {\r\n  const [url] = useState(\"https://randomuser.me/api/?results=10\");\r\n  const { sortFunc } = useGet(url);\r\n  const {\r\n    visibleEmployees,\r\n    setVisibleEmployees,\r\n    setEmployees,\r\n    employees,\r\n  } = useContext(EmployeeContext);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(e.target.value);\r\n    if (e.target.value === \"\") {\r\n      setVisibleEmployees(employees);\r\n    } else {\r\n      const filteredList = visibleEmployees.filter((person) => {\r\n        console.log(person.name.first);\r\n        return person.name.first.includes(e.target.value);\r\n      });\r\n      console.log(filteredList);\r\n      setVisibleEmployees(filteredList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <input name=\"searchInput\" onChange={handleChange} />\r\n      <table className=\"mx-auto\" id=\"table\">\r\n        <thead id=\"thead\">\r\n          <tr>\r\n            <td onClick={() => sortFunc(\"name\")}>\r\n              <p>CLICK TO SORT</p>\r\n              <Button>First Name</Button>\r\n            </td>\r\n            <td>Last Name</td>\r\n            <td>Gender</td>\r\n            <td>E-mail</td>\r\n            <td onClick={() => sortFunc(\"age\")}>\r\n              <p>CLICK TO SORT</p>\r\n              <Button>Age</Button>\r\n            </td>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {visibleEmployees.map((employee) => {\r\n            return (\r\n              <tr key={employee.login.uuid}>\r\n                <td>{employee.name.first}</td>\r\n                <td>{employee.name.last}</td>\r\n                <td>{employee.gender}</td>\r\n                <td>{employee.email}</td>\r\n                <td>{employee.dob.age}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n}\r\n//end employee table function\r\n\r\nexport default EmployeeTable;\r\n","import React, { useState } from \"react\";\n\n//import logo from './logo.svg';\nimport \"./App.css\";\nimport NavBar from \"./components/NavBar\";\nimport EmployeeTable from \"./components/EmployeeTable\";\n\nimport { EmployeeContext } from \"./components/EmployeeContext\";\n\nfunction App() {\n  const [employees, setEmployees] = useState([]);\n  const [visibleEmployees, setVisibleEmployees] = useState([]);\n\n  return (\n    <div className=\"App\" id=\"app\">\n      <EmployeeContext.Provider\n        value={{\n          employees,\n          setEmployees,\n          visibleEmployees,\n          setVisibleEmployees,\n        }}\n      >\n        <NavBar />\n        <EmployeeTable />\n      </EmployeeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}